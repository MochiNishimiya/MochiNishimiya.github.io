<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Mochi</title>
    <link>https://mochinishimiya.github.io/posts/</link>
    <description>Recent content in Posts on Mochi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Feb 2023 01:11:28 +0700</lastBuildDate><atom:link href="https://mochinishimiya.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ACSC 2023</title>
      <link>https://mochinishimiya.github.io/posts/acsc2023/</link>
      <pubDate>Sun, 26 Feb 2023 01:11:28 +0700</pubDate>
      
      <guid>https://mochinishimiya.github.io/posts/acsc2023/</guid>
      <description>Table of Contents pyso Reversing Obtaining the flag Bogus VPERMD VPUNPCKLDQ VPUNPCKHDQ VPCMPGTD Putting it all together Solution Overview This week I played TetCTF with team The South Gang (purf3ct x blackpinkEx) and we manage to get second place overall. Although there&amp;rsquo;s no Reverse Engineer category (which I mainly do), me and my friends encounter a really interesting pwn challenge which is really nice and also really fun to solve, and here&amp;rsquo;s my writeup about it.</description>
    </item>
    
    <item>
      <title>TetCTF 2023 - Game</title>
      <link>https://mochinishimiya.github.io/posts/tetctf2023/</link>
      <pubDate>Tue, 03 Jan 2023 01:11:28 +0700</pubDate>
      
      <guid>https://mochinishimiya.github.io/posts/tetctf2023/</guid>
      <description>Table of Contents Overview Description First Tackles Environment Setup Exploiting Overview This week I played TetCTF with team The South Gang (purf3ct x blackpinkEx) and we manage to get second place overall. Although there&amp;rsquo;s no Reverse Engineer category (which I mainly do), me and my friends encounter a really interesting pwn challenge which is really nice and also really fun to solve, and here&amp;rsquo;s my writeup about it.
Description I wrote a Metamod plugin to retrieve the classname of any entities on a running Sven Co-Op game server.</description>
    </item>
    
    <item>
      <title>ASCIS 2022 - Faku</title>
      <link>https://mochinishimiya.github.io/posts/ascis2022/</link>
      <pubDate>Sun, 16 Oct 2022 01:11:28 +0700</pubDate>
      
      <guid>https://mochinishimiya.github.io/posts/ascis2022/</guid>
      <description>Table of Contents Một vài lời nói đầu Khởi đầu Phân tích Anti Debugger Một vài lời nói đầu Sinh viên an toàn thông tin năm nay mình thi cùng với team UIT.pawf3ct, và bài blog này sẽ nói về cách làm của mình cho bài Reverse tên Faku. Trong lúc thi mình đã đầu tư cả 5-6 tiếng vào bài này chỉ vì một lỗi sai vô cùng ngớ ngẩn, tuy vậy mình vẫn cảm thấy khá vui và vô cùng giải tỏa tinh thần khi tìm ra được flag bài này.</description>
    </item>
    
    <item>
      <title>CorCTF 2022</title>
      <link>https://mochinishimiya.github.io/posts/corctf2022/</link>
      <pubDate>Fri, 05 Aug 2022 01:11:28 +0700</pubDate>
      
      <guid>https://mochinishimiya.github.io/posts/corctf2022/</guid>
      <description>Table of Contents Hackermans Dungeon Reversing Obtaining the flag Bogus VPERMD VPUNPCKLDQ VPUNPCKHDQ VPCMPGTD Putting it all together Solution Hackermans Dungeon (8 solves) Hackerman told us he cannot be hacked. Can you hack hackerman?
It&amp;rsquo;s a normal AMD64 PE file with the purpose of checking user&amp;rsquo;s username and password.
Loading it into IDA and messing around, we can spot some functions that look similar to this:
... v28 = v25 + __ROL4__(v21 + (v25 &amp;amp; v20 | v26) + v18 - 40341101, 12); v29 = v28 + __ROR4__(v22 + (v25 &amp;amp; v28 | v20 &amp;amp; ~v28) + v24, 15); v30 = v29 + __ROR4__(v27 + (v29 &amp;amp; v28 | v25 &amp;amp; ~v29) + 1236535329 + v20, 10); v31 = v30 + __ROL4__(a2[1] - 165796510 + (v30 &amp;amp; v28 | v29 &amp;amp; ~v28) + v25, 5); v32 = v31 + __ROL4__(v28 + v83 - 1069501632 + (v30 &amp;amp; ~v29 | v31 &amp;amp; v29), 9); v33 = v32 + __ROL4__(v84 + (v30 &amp;amp; v32 | v31 &amp;amp; ~v30) + v29 + 643717713, 14); v34 = v33 + __ROR4__(*a2 + (v31 &amp;amp; v33 | v32 &amp;amp; ~v31) + v30 - 373897302, 12); v35 = v34 + __ROL4__(v85 + (v34 &amp;amp; v32 | v33 &amp;amp; ~v32) + v31 - 701558691, 5); v36 = v35 + __ROL4__(v12 + (v35 &amp;amp; v33 | v34 &amp;amp; ~v33) + v32 + 38016083, 9); v37 = v36 + __ROL4__(v27 + (v34 &amp;amp; v36 | v35 &amp;amp; ~v34) + v33 - 660478335, 14); v38 = v37 + __ROR4__(v88 + (v35 &amp;amp; v37 | v36 &amp;amp; ~v35) + v34 - 405537848, 12); v39 = v38 + __ROL4__(v79 + (v38 &amp;amp; v36 | v37 &amp;amp; ~v36) + v35 + 568446438, 5); v40 = v39 + __ROL4__(v22 + (v39 &amp;amp; v37 | v38 &amp;amp; ~v37) + v36 - 1019803690, 9); v41 = v40 + __ROL4__(v37 + v87 + (v38 &amp;amp; v40 | v39 &amp;amp; ~v38) - 187363961, 14); v42 = v41 + __ROR4__(v80 + (v39 &amp;amp; v41 | v40 &amp;amp; ~v39) + v38 + 1163531501, 12); v43 = v42 + __ROL4__(v21 + (v42 &amp;amp; v40 | v41 &amp;amp; ~v40) + v39 - 1444681467, 5); .</description>
    </item>
    
  </channel>
</rss>
