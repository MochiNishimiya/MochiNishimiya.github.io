<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mochi</title>
    <link>https://mochinishimiya.github.io/</link>
    <description>Recent content on Mochi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Aug 2022 01:11:28 +0700</lastBuildDate><atom:link href="https://mochinishimiya.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://mochinishimiya.github.io/about/</link>
      <pubDate>Fri, 05 Aug 2022 01:25:02 +0700</pubDate>
      
      <guid>https://mochinishimiya.github.io/about/</guid>
      <description>A noob no one asked for, and still learning everyday. Main goal is to have fun in life (indeed, rev and pwn is really fun!).
Member of team idek, and captain of team purf3ct.</description>
    </item>
    
    <item>
      <title>CorCTF 2022</title>
      <link>https://mochinishimiya.github.io/posts/corctf2022/</link>
      <pubDate>Fri, 05 Aug 2022 01:11:28 +0700</pubDate>
      
      <guid>https://mochinishimiya.github.io/posts/corctf2022/</guid>
      <description>Table of Contents Hackermans Dungeon Reversing Obtaining the flag Bogus VPERMD VPUNPCKLDQ VPUNPCKHDQ VPCMPGTD Putting it all together Solution Hackermans Dungeon (8 solves) Hackerman told us he cannot be hacked. Can you hack hackerman?
It&amp;rsquo;s a normal AMD64 PE file with the purpose of checking user&amp;rsquo;s username and password.
Loading it into IDA and messing around, we can spot some functions that look similar to this:
... v28 = v25 + __ROL4__(v21 + (v25 &amp;amp; v20 | v26) + v18 - 40341101, 12); v29 = v28 + __ROR4__(v22 + (v25 &amp;amp; v28 | v20 &amp;amp; ~v28) + v24, 15); v30 = v29 + __ROR4__(v27 + (v29 &amp;amp; v28 | v25 &amp;amp; ~v29) + 1236535329 + v20, 10); v31 = v30 + __ROL4__(a2[1] - 165796510 + (v30 &amp;amp; v28 | v29 &amp;amp; ~v28) + v25, 5); v32 = v31 + __ROL4__(v28 + v83 - 1069501632 + (v30 &amp;amp; ~v29 | v31 &amp;amp; v29), 9); v33 = v32 + __ROL4__(v84 + (v30 &amp;amp; v32 | v31 &amp;amp; ~v30) + v29 + 643717713, 14); v34 = v33 + __ROR4__(*a2 + (v31 &amp;amp; v33 | v32 &amp;amp; ~v31) + v30 - 373897302, 12); v35 = v34 + __ROL4__(v85 + (v34 &amp;amp; v32 | v33 &amp;amp; ~v32) + v31 - 701558691, 5); v36 = v35 + __ROL4__(v12 + (v35 &amp;amp; v33 | v34 &amp;amp; ~v33) + v32 + 38016083, 9); v37 = v36 + __ROL4__(v27 + (v34 &amp;amp; v36 | v35 &amp;amp; ~v34) + v33 - 660478335, 14); v38 = v37 + __ROR4__(v88 + (v35 &amp;amp; v37 | v36 &amp;amp; ~v35) + v34 - 405537848, 12); v39 = v38 + __ROL4__(v79 + (v38 &amp;amp; v36 | v37 &amp;amp; ~v36) + v35 + 568446438, 5); v40 = v39 + __ROL4__(v22 + (v39 &amp;amp; v37 | v38 &amp;amp; ~v37) + v36 - 1019803690, 9); v41 = v40 + __ROL4__(v37 + v87 + (v38 &amp;amp; v40 | v39 &amp;amp; ~v38) - 187363961, 14); v42 = v41 + __ROR4__(v80 + (v39 &amp;amp; v41 | v40 &amp;amp; ~v39) + v38 + 1163531501, 12); v43 = v42 + __ROL4__(v21 + (v42 &amp;amp; v40 | v41 &amp;amp; ~v40) + v39 - 1444681467, 5); .</description>
    </item>
    
  </channel>
</rss>
